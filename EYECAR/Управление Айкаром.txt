Управление беспилотным автомобилем Айкар предполагает написание программ для трёх устройств.

Первое устройство - компьютер оператора. Второе устройство - бортовой компьютер Айкара. Третье устройство - контроллер Айкара. На компьютере оператора работает программа "Main_loop.py". На бортовом компьютере Айкара запущено две программы: "server.py" и "Cmd_receiver.py". Контроллер Айкара выполняет программу "Kontroller.cpp".

Посмотрите изображение, приложенное к этому файлу, оно отражает взаимодействие устройств и программ. Серым обозначены программы, которые вам нужно доработать.

Контроллер Айкара - плата VOSTOK UNO-VN035, спроектированная и производимая ДЦ "Восток", г.Владивосток, на основе российского 32-разрядного RISC микроконтроллера 1921ВК035 производства АО "НИИЭТ".
Контроллер выполняет программу "Kontroller.cpp". Программа должны принимать данные от Raspberry Pi и выдаватьсоответствующие им сигналы для сервоприводов и двигателя. Программа "Kontroller.cpp" недописана до конца - отсутствует приём сообщений от Raspberry. Ознакомьтесь с кодом программы и доработайте его. 
Raspberry Pi и VOSTOK UNO обмениваются данными через UART. VOSTOK UNO использует Serial1.
Синтаксис написания программы для VOSTOK UNO совпадает с синтаксисом Arduino. Вы можете редактировать программу в Arduino IDE и прислать .ino файл. Не подключайте библиотеки сверх тех, которые уже подключены. 
Все пользовательские функции должны быть обьявлены до того как будут использованы. (До функции setup())

Raspberri Pi играет роль бортового компьютера. Он читает кадры с камеры и отправляет их на компьютер оператора, этим занимается программа server.py. Доступа к server.py у вас нет. Кроме чтения кадров, бортовой компьютер Айкара принимает данные от компьютера оператора и пересылает их VOSTOK UNO, этим занимается программа "Cmd_receiver.py". Код программы "Cmd_receiver.py" предоставлен вам, его не рекомендуется изменять. Он нужен, чтобы вы разобрались в том, какие именно данные должны принимать VOSTOK UNO.

Компьютер оператора выполняет самую тяжёлую в вычислительном плане работу, он обрабатывает данные с камеры беспилотника и принимает решения тормозить или ехать дальше, повернуть направо или налево, ускориться или остановиться и разгрузиться. Обработка кадров с камеры реализована в программе "PC_client.pi". Эту программу вам необходимо дорабатывать. Именно её вы будете изменять от подзадачи к подзадаче. Код, предоставленный вам на старте, позволяет детектировать разметку и ехать по своей полосе дороги, без учёта перекрёстков и резких поворотов. 

Помните, что решения с помощью delay и sleep не принимаются! 
Измерение времени следует делать методами, не блокирующими обработку видеопотока и остальные операции.
При решении задач подразумевается, что беспилотник движется плавно и без рывков. Остановки возможны, например, на стоп-линии, но не более того.
